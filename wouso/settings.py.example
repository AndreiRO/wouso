# Django settings for wouso project.
# TODO: more descriptive text about what to modify and what not

# Global debug switch
DEBUG = True

# Setup logging
#import logging
#from djangologdb.handlers import DjangoDatabaseHandler, add_handler
#logging.basicConfig(level=logging.DEBUG if DEBUG else logging.INFO)
# This will get the default (root) logger; any further getLogger calls will inherit root
#logger = logging.getLogger()
#add_handler(logger, DjangoDatabaseHandler())

# Configuration
import os.path

TEMPLATE_DEBUG = DEBUG

ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'data.db',                      # Or path to database file if using sqlite3.
        'USER': '',                      # Not used with sqlite3.
        'PASSWORD': '',                  # Not used with sqlite3.
        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'Europe/Bucharest'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

LANGUAGES = (
    ('en', 'English'),
    ('ro', 'Romanian'),
)

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale
USE_L10N = True

# Absolute path to the directory that holds media.
# Example: "/home/media/media.lawrence.com/"
MEDIA_ROOT = os.path.normpath(os.path.dirname(__file__) + "/resources/static/")

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash if there is a path component (optional in other cases).
# Examples: "http://media.lawrence.com", "http://example.com/media/"
MEDIA_URL = ''

# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = '/media/'

# Make this unique, and don't share it with anybody.
SECRET_KEY = 'l*a)xet2kz8!@p(p@op41ce&#1u7i_+^i1d*fr53wak9)tyg!k'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'wouso.interface.loaders.Loader',
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
    #     'django.template.loaders.eggs.Loader',
    )

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # If we want to log exceptions, uncomment next line:
    # 'djangologdb.middleware.LoggingMiddleware',
    # for last 10 minutes to work
    'wouso.middleware.Seen',
    )
AUTHENTICATION_BACKENDS = (
    #'wouso.middleware.ldap_connection.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)

ROOT_URLCONF = 'wouso.interface.urls'

TEMPLATE_DIRS = (
    os.path.normpath(os.path.dirname(__file__) + "/resources/templates/"),
)
THEMES_ROOT = os.path.normpath(os.path.dirname(__file__) + "/resources/static/themes/")

TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.contrib.messages.context_processors.messages',

    'wouso.interface.context_processors.sidebar',
    'wouso.interface.context_processors.header_footer',
    'wouso.interface.context_processors.context',
)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    # Uncomment the next line to enable the admin:
    'django.contrib.admin',
    # WoUSO specific
    'wouso.core.config',
    'wouso.core.user',
    'wouso.core.game',
    'wouso.core.scoring',
    'wouso.core.qpool',
    'wouso.core.magic',

    'wouso.games.qotd',
    'wouso.games.challenge',
    'wouso.games.quest',
    'wouso.games.specialquest',
    'wouso.games.workshop',

    'wouso.interface',
    'wouso.interface.cpanel',
    'wouso.interface.top',
    'wouso.interface.activity',
    'wouso.interface.chat',
    'wouso.interface.apps.pages',
    'wouso.interface.apps.statistics',
    'wouso.interface.apps.messaging',

    # Needed for API Oauth
    'piston',
    'wouso.interface.api',

    #'djangologdb',
    'django_nose',
    'wouso.interface.api.c2dm',
)

TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

LOGIN_URL = '/user/login/'
LOGIN_REDIRECT_URL = '/hub/'

AUTH_PROFILE_MODULE = 'user.Player'

MEDIA_ARTIFACTS_DIR = os.path.dirname(__file__) + "/resources/static/upload/"
MEDIA_ARTIFACTS_URL = "/static/upload/"

WOUSO_VERSION = '4.0'

LEVEL_LIMITS = None # Override this with an iterable
STARTING_POINTS = 15

FINAL_QUEST_CHECKER_PATH = '/home/wouso/fqchecker/' # Folder containing task-01/check, task-02/, task-03/check etc

FORCE_SCRIPT_NAME = '' # Change this in localsettings

OAUTH_CALLBACK_VIEW = 'wouso.interface.api.views.request_token_ready'
OAUTH_AUTH_VIEW = 'wouso.interface.api.views.oauth_auth_view'

C2DM_AUTH_TOKEN = '' # Change this to a ClientLogin token from Google

# please don't remove this yet
if os.path.isfile(os.path.dirname(__file__) + "/localsettings.py"):
    from localsettings import *
